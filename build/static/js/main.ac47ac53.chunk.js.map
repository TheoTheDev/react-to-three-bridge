{"version":3,"sources":["gfx/EventBridge.js","gfx/WorldContainer.js","components/FrameNum.js","components/UIButtonBlock.js","components/ReactApp.js","index.js"],"names":["EventBridge","_classCallCheck","mainCallback","inEvents","Map","outEvents","inEventListeners","outEventListeners","_createClass","key","value","eventName","callback","eventListeners","this","get","Set","set","add","delete","params","_this","forEach","paramsList","size","listener","clear","WorldContainer","prevRenderTime","updateBoxColor","box","material","color","onResize","camera","aspect","window","innerWidth","innerHeight","updateProjectionMatrix","renderer","setSize","loop","_this$prevRenderTime","time","arguments","length","undefined","requestAnimationFrame","delta","eventBridge","processEvents","animate","render","scene","init","THREE","setPixelRatio","devicePixelRatio","domElement","id","setClearColor","document","body","appendChild","position","controls","OrbitControls","target","update","background","light","geometry","addEventListener","addInEventListener","timeElapsed","timeElapsedS","rotation","x","z","pushOutEvent","frame","info","FrameNum","_ref","React","createElement","Fragment","theme","blue","default","hover","pink","Button","styled","button","_templateObject","_taggedTemplateLiteral","props","defaultProps","UIButtonBlock","setColor","colors","onClick","Math","floor","random","GlobalContext","createContext","ReactApp","_useState","useState","_useState2","_slicedToArray","worldContainerApp","setWorldContainerApp","_useState3","_useState4","_useState5","_useState6","frameNum","setFrameNum","updateFrame","useCallback","useEffect","container","addOutEventListener","pushInEvent","Provider","className","removeOutEventListener","rootElement","getElementById","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.ac47ac53.chunk.js","sourcesContent":["\nexport class EventBridge {\n\n    mainCallback = null;\n\n    inEvents = new Map();\n    outEvents = new Map();\n\n    inEventListeners = new Map();\n    outEventListeners = new Map();\n\n    //\n\n    addInEventListener ( eventName, callback ) {\n\n        let eventListeners = this.inEventListeners.get( eventName );\n\n        if ( ! eventListeners ) {\n\n            eventListeners = new Set();\n            this.inEventListeners.set( eventName, eventListeners );\n\n        }\n\n        eventListeners.add( callback );\n\n    };\n\n    removeInEventListener ( eventName, callback ) {\n\n        const eventListeners = this.inEventListeners.get( eventName );\n\n        if ( eventListeners ) {\n\n            eventListeners.delete( callback );\n\n        }\n\n    };\n\n    pushInEvent ( eventName, params ) {\n\n        let inEvents = this.inEvents.get( eventName );\n\n        if ( ! inEvents ) {\n\n            inEvents = new Set();\n            this.inEvents.set( eventName, inEvents );\n\n        }\n\n        inEvents.add( params );\n\n    };\n\n    //\n\n    addOutEventListener ( eventName, callback ) {\n\n        let eventListeners = this.outEventListeners.get( eventName );\n\n        if ( ! eventListeners ) {\n\n            eventListeners = new Set();\n            this.outEventListeners.set( eventName, eventListeners );\n\n        }\n\n        eventListeners.add( callback );\n\n    };\n\n    removeOutEventListener ( eventName, callback ) {\n\n        const eventListeners = this.outEventListeners.get( eventName );\n\n        if ( eventListeners ) {\n\n            eventListeners.delete( callback );\n\n        }\n\n    };\n\n    pushOutEvent ( eventName, params ) {\n\n        let outEvents = this.outEvents.get( eventName );\n\n        if ( ! outEvents ) {\n\n            outEvents = new Set();\n            this.outEvents.set( eventName, outEvents );\n\n        }\n\n        outEvents.add( params );\n\n    };\n\n    //\n\n    processEvents () {\n\n        // process out events\n\n        this.outEvents.forEach( ( paramsList, eventName ) => {\n\n            const eventListeners = this.outEventListeners.get( eventName );\n\n            if ( eventListeners && eventListeners.size ) {\n\n                paramsList.forEach( ( params ) => {\n\n                    eventListeners.forEach( ( listener ) => {\n\n                        listener( params );\n\n                    });\n\n                });\n\n            }\n\n        });\n\n        this.outEvents.clear();\n\n        // process in events\n\n        this.inEvents.forEach( ( paramsList, eventName ) => {\n\n            const eventListeners = this.inEventListeners.get( eventName );\n\n            if ( eventListeners && eventListeners.size ) {\n\n                paramsList.forEach( ( params ) => {\n\n                    eventListeners.forEach( ( listener ) => {\n\n                        listener( params );\n\n                    });\n\n                });\n\n            }\n\n        });\n\n        this.inEvents.clear();\n\n    };\n\n};\n","\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\n\nimport { EventBridge } from './EventBridge';\n\n//\n\nexport class WorldContainer {\n\n    prevRenderTime = 0;\n\n    constructor () {\n\n        this.eventBridge = new EventBridge();\n\n        this.init();\n\n    };\n\n    init () {\n\n        this.renderer = new THREE.WebGLRenderer();\n        this.renderer.setPixelRatio( window.devicePixelRatio );\n        this.renderer.setSize( window.innerWidth, window.innerHeight );\n        this.renderer.domElement.id = 'threejs';\n        this.renderer.setClearColor( 0xff0000 );\n        document.body.appendChild( this.renderer.domElement );\n\n        this.camera = new THREE.PerspectiveCamera( 60, 1920/1080, 1, 1000 );\n        this.camera.position.set( 5, 3, 5 );\n\n        const controls = new OrbitControls( this.camera, this.renderer.domElement );\n        controls.target.set( 0, 0, 0 );\n        controls.update();\n\n        this.scene = new THREE.Scene();\n        this.scene.background = new THREE.Color( 1.0, 1.0, 1.0 );\n\n        const light = new THREE.AmbientLight( 0xFFFFFF, 1.0 );\n        this.scene.add( light );\n\n        const material = new THREE.MeshBasicMaterial({ color: 0xff0000 });\n\n        const geometry = new THREE.BoxGeometry( 2, 2, 2 );\n        const box = new THREE.Mesh( geometry, material );\n        box.position.set( 0, 0, 0 );\n        this.scene.add( box );\n        this.box = box;\n\n        //\n\n        window.addEventListener( 'resize', this.onResize );\n\n        this.eventBridge.addInEventListener( 'SetColor', this.updateBoxColor );\n\n        //\n\n        this.onResize();\n        this.loop();\n\n    };\n\n    updateBoxColor = ( params ) => {\n\n        this.box.material.color.set( params.color );\n\n    };\n\n    onResize = () => {\n\n        this.camera.aspect = window.innerWidth / window.innerHeight;\n        this.camera.updateProjectionMatrix();\n        this.renderer.setSize( window.innerWidth, window.innerHeight );\n\n    };\n\n    loop = ( time = 0 ) => {\n\n        requestAnimationFrame( this.loop );\n\n        this.prevRenderTime = this.prevRenderTime ?? time;\n        const delta = time - this.prevRenderTime;\n\n        this.eventBridge.processEvents();\n\n        this.animate( delta );\n        this.renderer.render( this.scene, this.camera );\n\n        this.prevRenderTime = time;\n\n    };\n\n    animate ( timeElapsed ) {\n\n        const timeElapsedS = timeElapsed * 0.001;\n\n        this.box.rotation.x += timeElapsedS;\n        this.box.rotation.z += 1.3 * timeElapsedS;\n\n        this.eventBridge.pushOutEvent( 'UpdateFrame', { frame: this.renderer.info.render.frame } );\n\n    };\n\n};\n","\r\nimport React from \"react\";\r\n\r\n//\r\n\r\nexport const FrameNum = ({ value }) => {\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                { value }\r\n            </div>\r\n        </>\r\n    );\r\n\r\n};\r\n","\r\nimport React from 'react';\r\nimport styled from \"styled-components\";\r\n\r\n//\r\n\r\nconst theme = {\r\n    blue: {\r\n        default: \"#3f51b5\",\r\n        hover: \"#283593\"\r\n    },\r\n    pink: {\r\n        default: \"#e91e63\",\r\n        hover: \"#ad1457\"\r\n    }\r\n};\r\n\r\nexport const Button = styled.button`\r\n    background-color: ${(props) => theme[props.theme].default};\r\n    color: white;\r\n    padding: 5px 15px;\r\n    border-radius: 5px;\r\n    outline: 0;\r\n    text-transform: uppercase;\r\n    margin: 10px 0px;\r\n    cursor: pointer;\r\n    box-shadow: 0px 2px 2px lightgray;\r\n    transition: ease background-color 250ms;\r\n    &:hover {\r\n        background-color: ${(props) => theme[props.theme].hover};\r\n    }\r\n    &:disabled {\r\n        cursor: default;\r\n        opacity: 0.7;\r\n    }\r\n`;\r\n\r\nButton.defaultProps = {\r\n    theme: 'blue'\r\n};\r\n\r\n//\r\n\r\nexport const UIButtonBlock = ({ setColor }) => {\r\n\r\n    const colors = [ 0xff0000, 0x00ff00, 0x0000ff ];\r\n\r\n    const setRedColor = () => {\r\n\r\n        setColor( 0xff0000 );\r\n\r\n    };\r\n\r\n    const setGreenColor = () => {\r\n\r\n        setColor( 0x00ff00 );\r\n\r\n    };\r\n\r\n    const setRandomColor = () => {\r\n\r\n        setColor( colors[ Math.floor( Math.random() * colors.length ) ] );\r\n\r\n    };\r\n\r\n    //\r\n\r\n    return (\r\n        <>\r\n            <Button onClick={ setRedColor } >Red</Button>\r\n            <Button onClick={ setGreenColor } >Green</Button>\r\n            <Button onClick={ setRandomColor } >Random</Button>\r\n        </>\r\n    );\r\n\r\n};\r\n","\nimport React, { useState, useEffect, createContext, useCallback } from 'react';\n\nimport { WorldContainer } from '../gfx/WorldContainer.js';\n\nimport { FrameNum } from './FrameNum';\nimport { UIButtonBlock, Button } from './UIButtonBlock.js';\n\n//\n\nconst GlobalContext = createContext();\n\nexport const ReactApp = () => {\n\n    const [ worldContainerApp, setWorldContainerApp ] = useState( null );\n\n    const [ color, setColor ] = useState( 0x000000 );\n    const [ frameNum, setFrameNum ] = useState( 0 );\n\n    // update frame callback\n\n    const updateFrame = useCallback( ( params ) => {\n\n        setFrameNum( 'Frame ' + params.frame );\n\n    }, [] );\n\n    // add / remove event listeres to threeJS World container for frame update\n\n    const pauseFrameUpdate = () => {\n\n        worldContainerApp.eventBridge.removeOutEventListener( 'UpdateFrame', updateFrame );\n\n    };\n\n    const resumeFrameUpdate = () => {\n\n        worldContainerApp.eventBridge.addOutEventListener( 'UpdateFrame', updateFrame );\n\n    };\n\n    // create threeJS world container\n\n    useEffect( () => {\n\n        const container = new WorldContainer();\n        setWorldContainerApp( container );\n\n        container.eventBridge.addOutEventListener( 'UpdateFrame', updateFrame );\n\n    }, [ updateFrame ] );\n\n    // when color prop updated add a new event to threeJS world container to queue\n\n    useEffect( () => {\n\n        if ( worldContainerApp ) {\n\n            worldContainerApp.eventBridge.pushInEvent( 'SetColor', { color } );\n\n        }\n\n    }, [ worldContainerApp, color ] );\n\n    //\n\n    return (\n        <GlobalContext.Provider value={ worldContainerApp }>\n            <div className=\"threejs\" id=\"threejs\"></div>\n            <div className=\"container\">\n                <div className=\"ui\">\n                    <UIButtonBlock setColor={ setColor }></UIButtonBlock>\n                    <Button onClick={ pauseFrameUpdate }>Pause frame update</Button>\n                    <Button onClick={ resumeFrameUpdate }>Resume frame update</Button>\n                    <FrameNum value={ frameNum } ></FrameNum>\n                </div>\n            </div>\n        </GlobalContext.Provider>\n    );\n\n};\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { ReactApp } from './components/ReactApp';\n\n//\n\nconst rootElement = document.getElementById('root');\n\nReactDOM.render(\n    <React.StrictMode>\n        <ReactApp />\n    </React.StrictMode>,\n    rootElement\n);\n"],"sourceRoot":""}