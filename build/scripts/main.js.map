{"version":3,"file":"main.bundle.js","mappings":"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","sources":["webpack:///webpack/runtime/chunk loaded","webpack:///./src/App.tsx","webpack:///./src/components/ReactApp.tsx","webpack:///./src/components/SceneParams.tsx","webpack:///./src/components/UIButtonBlock.tsx","webpack:///./src/gfx/WorldContainer.ts","webpack:///./src/utils/RTEventBridge.ts","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/global","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/runtime/node module decorator","webpack:///webpack/runtime/jsonp chunk loading","webpack:///webpack/runtime/nonce","webpack:///webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { ReactApp } from './components/ReactApp';\n\n//\n\nwindow.onload = () => {\n\n    const rootElement = document.getElementById('root');\n\n    ReactDOM.render(\n        <React.StrictMode>\n            <ReactApp />\n        </React.StrictMode>,\n        rootElement\n    );\n\n};\n","\nimport React, { useState, useEffect, createContext, useCallback } from 'react';\n\nimport { SceneParams } from './SceneParams';\nimport { UIButtonBlock, Button } from './UIButtonBlock';\n\nimport { RTEventBridge } from '../utils/RTEventBridge';\nimport { WorldContainer } from '../gfx/WorldContainer';\n\n//\n\nconst GlobalContext = createContext( null );\n\nexport const ReactApp = () => {\n\n    const [ worldContainerApp, setWorldContainerApp ] = useState( null );\n    const [ rtBridge, setRtBridge ]: [ RTEventBridge, ( value: RTEventBridge ) => void ] = useState( null );\n\n    const [ color, setColor ] = useState( 0xff5555 );\n    const [ frameNum, setFrameNum ] = useState( 0 );\n    const [ cameraPosition, setCameraPosition ] = useState([ 0, 0, 0 ]);\n\n    // events callbacks\n\n    const updateFrame = useCallback( ( params: { frame: number } ) => {\n\n        setFrameNum( params.frame );\n\n    }, [] );\n\n    const updateCameraPosition = useCallback( ( params: { x: number, y: number, z: number } ) => {\n\n        setCameraPosition([ params.x, params.y, params.z ]);\n\n    }, [] );\n\n    // add / remove event listeres to threeJS World container for frame update\n\n    const pauseFrameUpdate = () => {\n\n        rtBridge.removeGfxEventListener( 'FrameUpdate', updateFrame );\n\n    };\n\n    const resumeFrameUpdate = () => {\n\n        rtBridge.onGfxEvent( 'FrameUpdate', updateFrame );\n\n    };\n\n    // create threeJS world container\n\n    useEffect( () => {\n\n        const rtBridge = new RTEventBridge();\n        const container = new WorldContainer( rtBridge );\n\n        setWorldContainerApp( container );\n        setRtBridge( rtBridge );\n\n        rtBridge.onGfxEvent( 'FrameUpdate', updateFrame );\n        rtBridge.onGfxEvent( 'CameraPositionUpdate', updateCameraPosition );\n\n    }, [ updateFrame, updateCameraPosition ] );\n\n    // when color prop updated add a new event to threeJS world container to queue\n\n    useEffect( () => {\n\n        if ( worldContainerApp ) {\n\n            rtBridge.dispatchToGfx( 'SetColor', { color } );\n\n        }\n\n    }, [ worldContainerApp, color ] );\n\n    //\n\n    return (\n        <GlobalContext.Provider value={ worldContainerApp }>\n            <div className=\"container\">\n                <UIButtonBlock setColor={ setColor }></UIButtonBlock>\n                <Button onClick={ pauseFrameUpdate }>Pause frame update</Button>\n                <Button onClick={ resumeFrameUpdate }>Resume frame update</Button>\n                <SceneParams frame={ frameNum } cameraPosition={ cameraPosition } />\n                <canvas id=\"renderport\" />\n            </div>\n        </GlobalContext.Provider>\n    );\n\n};\n","\r\nimport React from 'react';\r\n\r\n//\r\n\r\nexport const SceneParams = ( { frame, cameraPosition }: { frame: number, cameraPosition: number[] } ) => {\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                Frame { frame }<br/>\r\n                Camera pos x: { cameraPosition[0].toFixed( 2 ) } y: { cameraPosition[1].toFixed( 2 ) } z: { cameraPosition[2].toFixed( 2 ) }\r\n            </div>\r\n        </>\r\n    );\r\n\r\n};\r\n","\r\nimport React from 'react';\r\nimport styled from \"styled-components\";\r\n\r\n//\r\n\r\nconst theme = {\r\n    blue: {\r\n        default: \"#3f51b5\",\r\n        hover: \"#283593\"\r\n    },\r\n    pink: {\r\n        default: \"#e91e63\",\r\n        hover: \"#ad1457\"\r\n    }\r\n};\r\n\r\nexport const Button = styled.button`\r\n    background-color: ${ ( props: { theme: 'blue' | 'pink' } ) => theme[ props.theme ].default };\r\n    color: white;\r\n    padding: 5px 15px;\r\n    border-radius: 5px;\r\n    outline: 0;\r\n    text-transform: uppercase;\r\n    margin: 10px 0px;\r\n    cursor: pointer;\r\n    box-shadow: 0px 2px 2px lightgray;\r\n    transition: ease background-color 250ms;\r\n    &:hover {\r\n        background-color: ${ ( props: { theme: 'blue' | 'pink' } ) => theme[ props.theme ].hover };\r\n    }\r\n    &:disabled {\r\n        cursor: default;\r\n        opacity: 0.7;\r\n    }\r\n`;\r\n\r\nButton.defaultProps = {\r\n    theme: 'blue'\r\n};\r\n\r\n//\r\n\r\nexport const UIButtonBlock = ( { setColor }: { setColor: ( value: number ) => void } ) => {\r\n\r\n    const colors = [ 0xff0000, 0x00ff00, 0x0000ff ];\r\n\r\n    const setRedColor = () => {\r\n\r\n        setColor( 0xff0000 );\r\n\r\n    };\r\n\r\n    const setGreenColor = () => {\r\n\r\n        setColor( 0x00ff00 );\r\n\r\n    };\r\n\r\n    const setRandomColor = () => {\r\n\r\n        setColor( colors[ Math.floor( Math.random() * colors.length ) ] );\r\n\r\n    };\r\n\r\n    //\r\n\r\n    return (\r\n        <>\r\n            <Button onClick={ setRedColor } >Red</Button>\r\n            <Button onClick={ setGreenColor } >Green</Button>\r\n            <Button onClick={ setRandomColor } >Random</Button>\r\n        </>\r\n    );\r\n\r\n};\r\n","\nimport { WebGLRenderer, PerspectiveCamera, Scene, Color, AmbientLight, MeshBasicMaterial, BoxGeometry, Mesh, Clock, SpotLight, MeshPhongMaterial } from 'three';\nimport { OrbitControls } from 'three-stdlib';\n\nimport { RTEventBridge } from '../utils/RTEventBridge';\n\n//\n\nexport class WorldContainer {\n\n    private prevRenderTime: number = 0;\n    private renderer: WebGLRenderer;\n    private camera: PerspectiveCamera;\n    private scene: Scene;\n    private box: Mesh;\n    private clock: Clock = new Clock();\n\n    public rtBridge: RTEventBridge = new RTEventBridge();\n\n    //\n\n    constructor ( rtBridge: RTEventBridge ) {\n\n        this.rtBridge = rtBridge;\n\n        this.init();\n\n    };\n\n    public init () : void {\n\n        this.renderer = new WebGLRenderer({ canvas: document.querySelector('#renderport') });\n        this.renderer.setPixelRatio( window.devicePixelRatio );\n        this.renderer.setSize( window.innerWidth, window.innerHeight );\n\n        this.camera = new PerspectiveCamera( 60, 1920/1080, 1, 1000 );\n        this.camera.position.set( 5, 3, 5 );\n\n        const controls = new OrbitControls( this.camera, this.renderer.domElement );\n        controls.target.set( 0, 0, 0 );\n        controls.update();\n\n        this.scene = new Scene();\n        this.scene.background = new Color( 1.0, 1.0, 1.0 );\n\n        const light = new AmbientLight( 0xFFFFFF, 0.2 );\n        this.scene.add( light );\n\n        const spotLight = new SpotLight( 0xff8888, 0.9, 15 );\n        spotLight.position.copy( this.camera.position );\n        this.scene.add( spotLight );\n\n        const material = new MeshPhongMaterial({ color: 0xff0000 });\n        const geometry = new BoxGeometry( 2, 2, 2 );\n        const box = new Mesh( geometry, material );\n        box.position.set( 0, 0, 0 );\n        this.scene.add( box );\n        this.box = box;\n\n        //\n\n        window.addEventListener( 'resize', this.onResize );\n\n        this.rtBridge.onReactEvent( 'SetColor', this.updateBoxColor );\n\n        //\n\n        this.onResize();\n        this.loop();\n\n    };\n\n    private updateBoxColor = ( params: { color: number } ) : void => {\n\n        ( this.box.material as MeshBasicMaterial ).color.set( params.color );\n\n    };\n\n    private onResize = () : void => {\n\n        this.camera.aspect = window.innerWidth / window.innerHeight;\n        this.camera.updateProjectionMatrix();\n        this.renderer.setSize( window.innerWidth, window.innerHeight );\n\n    };\n\n    private loop = () : void => {\n\n        requestAnimationFrame( this.loop );\n        const delta = this.clock.getDelta();\n\n        // process in/out events queue\n        this.rtBridge.processEvents();\n\n        // updates and render\n        this.animate( delta );\n        this.renderer.render( this.scene, this.camera );\n\n    };\n\n    private animate ( delta: number ) : void {\n\n        this.box.rotation.x += delta;\n        this.box.rotation.z += 1.3 * delta;\n\n        this.rtBridge.dispatchToReact( 'CameraPositionUpdate', { x: this.camera.position.x, y: this.camera.position.y, z: this.camera.position.z } );\n        this.rtBridge.dispatchToReact( 'FrameUpdate', { frame: this.renderer.info.render.frame } );\n\n    };\n\n};\n","\ntype Callback = ( params: any ) => void;\n\n//\n\nexport class RTEventBridge {\n\n    private reactEventsQueue: Map<string, Set<Callback> > = new Map();\n    private reactEventListeners: Map<string, Set<Callback> > = new Map();\n\n    private gfxEventsQueue: Map<string, Set<Callback> > = new Map();\n    private gfxEventListeners: Map<string, Set<Callback> > = new Map();\n\n    //\n\n    public clear () : void {\n\n        this.reactEventsQueue.clear();\n        this.reactEventListeners.clear();\n\n        this.gfxEventsQueue.clear();\n        this.gfxEventListeners.clear();\n\n    };\n\n    public onReactEvent ( eventName: string, callback: Callback ) : void {\n\n        let listeners = this.reactEventListeners.get( eventName );\n\n        if ( ! listeners ) {\n\n            listeners = new Set();\n            this.reactEventListeners.set( eventName, listeners );\n\n        }\n\n        listeners.add( callback );\n\n    };\n\n    public removeReactEventListener ( eventName: string, callback: Callback ) : void {\n\n        const listeners = this.reactEventListeners.get( eventName );\n\n        if ( listeners ) {\n\n            listeners.delete( callback );\n\n            if ( ! listeners.size ) {\n\n                this.gfxEventListeners.delete( eventName );\n\n            }\n\n        }\n\n    };\n\n    public dispatchToGfx ( eventName: string, params: any ) : void {\n\n        let reactEvents = this.reactEventsQueue.get( eventName );\n\n        if ( ! reactEvents ) {\n\n            reactEvents = new Set();\n            this.reactEventsQueue.set( eventName, reactEvents );\n\n        }\n\n        reactEvents.add( params );\n\n    };\n\n    //\n\n    public onGfxEvent ( eventName: string, callback: Callback ) : void {\n\n        let listeners = this.gfxEventListeners.get( eventName );\n\n        if ( ! listeners ) {\n\n            listeners = new Set();\n            this.gfxEventListeners.set( eventName, listeners );\n\n        }\n\n        listeners.add( callback );\n\n    };\n\n    public removeGfxEventListener ( eventName: string, callback: Callback ) : void {\n\n        const listeners = this.gfxEventListeners.get( eventName );\n\n        if ( listeners ) {\n\n            listeners.delete( callback );\n\n            if ( ! listeners.size ) {\n\n                this.gfxEventListeners.delete( eventName );\n\n            }\n\n        }\n\n    };\n\n    public dispatchToReact ( eventName: string, params: any ) : void {\n\n        let gfxEvents = this.gfxEventsQueue.get( eventName );\n\n        if ( ! gfxEvents ) {\n\n            gfxEvents = new Set();\n            this.gfxEventsQueue.set( eventName, gfxEvents );\n\n        }\n\n        gfxEvents.add( params );\n\n    };\n\n    //\n\n    public processEvents () : void {\n\n        // process events sent to gfx\n\n        this.gfxEventsQueue.forEach( ( paramsList, eventName ) => {\n\n            const listeners = this.gfxEventListeners.get( eventName );\n\n            if ( listeners && listeners.size ) {\n\n                paramsList.forEach( ( params ) => {\n\n                    listeners.forEach( ( listener ) => {\n\n                        listener( params );\n\n                    });\n\n                });\n\n            }\n\n        });\n\n        this.gfxEventsQueue.clear();\n\n        // process events sent to react\n\n        this.reactEventsQueue.forEach( ( paramsList, eventName ) => {\n\n            const listeners = this.reactEventListeners.get( eventName );\n\n            if ( listeners && listeners.size ) {\n\n                paramsList.forEach( ( params ) => {\n\n                    listeners.forEach( ( listener ) => {\n\n                        listener( params );\n\n                    });\n\n                });\n\n            }\n\n        });\n\n        this.reactEventsQueue.clear();\n\n    };\n\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"main\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkreact_to_three_bridge\"] = self[\"webpackChunkreact_to_three_bridge\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","__webpack_require__.nc = undefined;","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"vendor\"], () => (__webpack_require__(\"./src/App.tsx\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","window","onload","rootElement","document","getElementById","render","StrictMode","ReactApp","GlobalContext","createContext","worldContainerApp","setWorldContainerApp","rtBridge","setRtBridge","color","setColor","frameNum","setFrameNum","cameraPosition","setCameraPosition","updateFrame","useCallback","params","frame","updateCameraPosition","x","y","z","useEffect","RTEventBridge","container","WorldContainer","onGfxEvent","dispatchToGfx","Provider","value","className","UIButtonBlock","Button","onClick","removeGfxEventListener","SceneParams","id","toFixed","theme","blue","default","hover","pink","button","props","colors","Math","floor","random","length","prevRenderTime","clock","Clock","updateBoxColor","box","material","set","onResize","camera","aspect","innerWidth","innerHeight","updateProjectionMatrix","renderer","setSize","loop","requestAnimationFrame","delta","getDelta","processEvents","animate","scene","this","init","WebGLRenderer","canvas","querySelector","setPixelRatio","devicePixelRatio","PerspectiveCamera","position","controls","OrbitControls","domElement","target","update","Scene","background","Color","light","AmbientLight","add","spotLight","SpotLight","copy","MeshPhongMaterial","geometry","BoxGeometry","Mesh","addEventListener","onReactEvent","rotation","dispatchToReact","info","reactEventsQueue","Map","reactEventListeners","gfxEventsQueue","gfxEventListeners","clear","eventName","callback","listeners","get","Set","removeReactEventListener","delete","size","reactEvents","gfxEvents","forEach","paramsList","listener","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","loaded","__webpack_modules__","call","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","key","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","g","globalThis","Function","e","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","chunkLoadingGlobal","self","bind","push","nc","__webpack_exports__"],"sourceRoot":""}